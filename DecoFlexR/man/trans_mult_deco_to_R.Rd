% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NMMFlex_wrapper.R
\name{trans_mult_deco_to_R}
\alias{trans_mult_deco_to_R}
\title{Translate Multiple Deconvolution Results to R object}
\usage{
trans_mult_deco_to_R(multiple_deconvolution_results)
}
\arguments{
\item{multiple_deconvolution_results}{A list, The result object returned
from a multiple deconvolution function.}
}
\value{
A list, with the following elements:
"x", "y", "z": The original input matrices.
"x_hat", "y_hat", "z_hat": The estimated matrices after
deconvolution.
"w", "h": The matrices of factor loadings and factor scores.
"a", "b": Additional matrices related to the deconvolution model.
"is_x_sparse", "is_y_sparse", "is_z_sparse", "is_model_sparse":
Boolean values indicating if the corresponding matrices are sparse.
"initialized_w", "initialized_h", "initialized_a", "initialized_b":
The initial values used for the corresponding matrices in the
deconvolution process.
"iterations": The number of iterations performed during the
deconvolution process.
"divergence_value", "delta_divergence_value": The final divergence
value and the change in divergence in the last iteration.
"running_info": Additional information about the running process.
"alpha", "beta", "alpha_regularizer_w": The parameters used in the
deconvolution model.
}
\description{
This function takes the output of a multiple deconvolution
process and translates it into an R-friendly format, returning a list
of all relevant results. The idea is to preserve the python data in the R
allocated memory, otherwise under certain circumstance the object will be
null.
}
\details{
This function is designed to simplify the handling of multiple
deconvolution results by translating the returned object from Python into
an R-friendly format.
}
