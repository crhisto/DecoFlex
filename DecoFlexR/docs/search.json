[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Crhistian Cardona. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cardona C (2023). DecoFlex: DecoFlex deconvolution method multi-omics data. R package version 0.1.0, https://github.com/crhisto/DecoFlex.","code":"@Manual{,   title = {DecoFlex: DecoFlex is a deconvolution method for multi-omics data},   author = {Crhistian Cardona},   year = {2023},   note = {R package version 0.1.0},   url = {https://github.com/crhisto/DecoFlex}, }"},{"path":"/reference/FindMarkers.proxy.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Marker Genes Proxy — FindMarkers.proxy","title":"Calculate Marker Genes Proxy — FindMarkers.proxy","text":"FindMarkers.proxy function flexible interface identifying marker genes using various methods.designed readily extensible, facilitating integration novel marker calculation techniques future. function calculates markers specific group relative cells (rest_groups) given Seurat object (seurat.reference).","code":""},{"path":"/reference/FindMarkers.proxy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Marker Genes Proxy — FindMarkers.proxy","text":"","code":"# S3 method for proxy FindMarkers(   seurat.reference,   group,   rest_groups,   test.use.value = \"wilcox\",   marker_strategy = \"keep_default_values\",   max.size.percentage = 0.7,   param.logfc.threshold = 2,   verbose = FALSE )"},{"path":"/reference/FindMarkers.proxy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Marker Genes Proxy — FindMarkers.proxy","text":"seurat.reference Seurat object used reference marker gene calculation. object contains single-cell RNA-seq data. group string specifying cell group (based clustering) calculate marker genes. rest_groups list vector specifying remaining cell groups considered background marker genes calculation. test.use.value String specifying statistical test use marker identification. methods currently supported include: 'wilcox', 'bimod', 't', 'negbinom', 'poisson', 'LR', 'MAST'. Please note 'roc' 'DESeq2' methods currently supported due discrepancies output values support issues, respectively. Default 'wilcox'. marker_strategy string specifying strategy use marker gene calculation. 'keep_default_values' (default) retains default values. strategies may added future. max.size.percentage Maximum acceptable size (proportion) group marker gene calculation. Default 0.70. param.logfc.threshold Threshold log-fold change, determines minimum change required gene considered marker. Default 2.0. verbose Logical value indicating whether display detailed progress messages function execution. Default FALSE.","code":""},{"path":"/reference/FindMarkers.proxy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Marker Genes Proxy — FindMarkers.proxy","text":"list marker genes specified cell group.","code":""},{"path":"/reference/FindMarkers.proxy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Marker Genes Proxy — FindMarkers.proxy","text":"function serves proxy different methods marker gene calculation. currently supports several statistical tests provides convenient point extension inclusion additional marker calculation methods. Note support different tests can influenced characteristics single-cell experiments, important choose method appropriate data.","code":""},{"path":"/reference/SCDC_basis_ONE_final.html","id":null,"dir":"Reference","previous_headings":"","what":"SCDC_basis_ONE_final — SCDC_basis_ONE_final","title":"SCDC_basis_ONE_final — SCDC_basis_ONE_final","text":"function constructs basis matrix single cells one subject, based ExpressionSet object. based function created SCDC R implementation. Please refer original implementation information: https://meichendong.github.io/SCDC/. Version: 0.0.0.9000","code":""},{"path":"/reference/SCDC_basis_ONE_final.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SCDC_basis_ONE_final — SCDC_basis_ONE_final","text":"","code":"SCDC_basis_ONE_final(   x,   ct.sub = NULL,   ct.varname,   sample,   ct.cell.size = NULL,   verbose = FALSE )"},{"path":"/reference/SCDC_basis_ONE_final.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SCDC_basis_ONE_final — SCDC_basis_ONE_final","text":"x ExpressionSet object single cells. object serve basis construction basis matrix. ct.sub vector cell types selected construct basis matrix. parameter optional, default NULL. ct.varname string indicates variable name 'cell types' 'x' dataset. sample string indicates variable name subject/samples 'x' dataset. ct.cell.size vector cell size factors corresponding ct.sub according prior knowledge. default NULL, means \"library size\" calculated based data. vector provided, names vector (names(ct.cell.size)) NULL. verbose boolean flag controlling amount information printed execution function. Default FALSE.","code":""},{"path":"/reference/SCDC_basis_ONE_final.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SCDC_basis_ONE_final — SCDC_basis_ONE_final","text":"list following components: Basis matrix Sum cell-type-specific library size Sample variance matrix Basis matrix mvw mvw matrix.","code":""},{"path":"/reference/SCDC_basis_ONE_final.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"SCDC_basis_ONE_final — SCDC_basis_ONE_final","text":"SCDC: proportion estimation method single cell RNA-Seq data. https://meichendong.github.io/SCDC/.","code":""},{"path":"/reference/SCDC_basis_final.html","id":null,"dir":"Reference","previous_headings":"","what":"SCDC_basis_final — SCDC_basis_final","title":"SCDC_basis_final — SCDC_basis_final","text":"function constructs basis matrix based ExpressionSet object single cells. based function created SCDC R implementation. Please refer original implementation information: https://meichendong.github.io/SCDC/. Version: 0.0.0.9000","code":""},{"path":"/reference/SCDC_basis_final.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SCDC_basis_final — SCDC_basis_final","text":"","code":"SCDC_basis_final(   x,   ct.sub = NULL,   ct.varname,   sample,   ct.cell.size = NULL,   verbose = FALSE )"},{"path":"/reference/SCDC_basis_final.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SCDC_basis_final — SCDC_basis_final","text":"x ExpressionSet object single cells. object serve basis construction basis matrix. ct.sub vector cell types selected construct basis matrix. parameter optional, default NULL. ct.varname string indicates variable name 'cell types' 'x' dataset. sample string indicates variable name subject/samples 'x' dataset. ct.cell.size vector cell size factors corresponding ct.sub according prior knowledge. default NULL, means \"library size\" calculated based data. vector provided, names vector (names(ct.cell.size)) NULL. verbose boolean flag controlling amount information printed execution function. Default FALSE.","code":""},{"path":"/reference/SCDC_basis_final.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SCDC_basis_final — SCDC_basis_final","text":"list following components: Basis matrix Sum cell-type-specific library size Sample variance matrix Basis matrix mvw mvw matrix.","code":""},{"path":"/reference/SCDC_basis_final.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"SCDC_basis_final — SCDC_basis_final","text":"SCDC: proportion estimation method single cell RNA-Seq data. https://meichendong.github.io/SCDC/.","code":""},{"path":"/reference/add_clustering_single_cell_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Clustering Information to Single Cell Dataset — add_clustering_single_cell_dataset","title":"Add Clustering Information to Single Cell Dataset — add_clustering_single_cell_dataset","text":"function enhances single cell dataset adding metacluster information . achieves iterating unique value hierarchical fit, identifying celltypes associated value, tagging corresponding cells single cell dataset new metacluster identifier.","code":""},{"path":"/reference/add_clustering_single_cell_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Clustering Information to Single Cell Dataset — add_clustering_single_cell_dataset","text":"","code":"add_clustering_single_cell_dataset(   sc.eset,   var_cluster_name = \"cluster_normalized\",   fit_hierarchical )"},{"path":"/reference/add_clustering_single_cell_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Clustering Information to Single Cell Dataset — add_clustering_single_cell_dataset","text":"sc.eset single cell ExpressionSet object. dataset modified -place include metacluster identifiers. var_cluster_name string specifying column name sc.eset cluster identifiers stored. Default 'cluster_normalized'. fit_hierarchical named vector names correspond celltypes values represent hierarchical clustering fit celltype.","code":""},{"path":"/reference/add_clustering_single_cell_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Clustering Information to Single Cell Dataset — add_clustering_single_cell_dataset","text":"ExpressionSet object (sc.eset) additional metacluster information.","code":""},{"path":"/reference/add_grouping_single_cell.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Grouping to Single Cell Data — add_grouping_single_cell","title":"Add Grouping to Single Cell Data — add_grouping_single_cell","text":"add_grouping_single_cell function iterates list cell types assigns labels single cell dataset based group level. labels format 'subcluster_level_#leaf#'.","code":""},{"path":"/reference/add_grouping_single_cell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Grouping to Single Cell Data — add_grouping_single_cell","text":"","code":"add_grouping_single_cell(   single_cell_data_exp,   sub_clusters_var,   level_group_name,   hierarchy_level_groups )"},{"path":"/reference/add_grouping_single_cell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Grouping to Single Cell Data — add_grouping_single_cell","text":"single_cell_data_exp list containing single cell data. function add new labels list. sub_clusters_var string representing variable used indicate subclusters single_cell_data_exp. level_group_name string representing name level group variable single_cell_data_exp. function add labels variable. hierarchy_level_groups list cell types define hierarchy levels. cell type list elements celltype_list, tree_level, leaf_number.","code":""},{"path":"/reference/add_grouping_single_cell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Grouping to Single Cell Data — add_grouping_single_cell","text":"function returns single_cell_data_exp list added labels level_group_name variable.","code":""},{"path":"/reference/aggregate_true_top_clustering_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate True Proportions for Top-Level Clustering — aggregate_true_top_clustering_prop","title":"Aggregate True Proportions for Top-Level Clustering — aggregate_true_top_clustering_prop","text":"aggregate_true_top_clustering_prop function calculates true proportions top-level clustersbased true subclustering proportions.","code":""},{"path":"/reference/aggregate_true_top_clustering_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate True Proportions for Top-Level Clustering — aggregate_true_top_clustering_prop","text":"","code":"aggregate_true_top_clustering_prop(   single_cell_data_exp,   true_prop,   top_clusters_var,   top_clusters_list,   sub_clusters_var )"},{"path":"/reference/aggregate_true_top_clustering_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate True Proportions for Top-Level Clustering — aggregate_true_top_clustering_prop","text":"single_cell_data_exp data frame matrix containing single cell data. true_prop matrix data frame containing true proportions subclusters. top_clusters_var variable name top clusters single_cell_data_exp. top_clusters_list list containing identifiers top clusters. sub_clusters_var variable name subclusters single_cell_data_exp.","code":""},{"path":"/reference/aggregate_true_top_clustering_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate True Proportions for Top-Level Clustering — aggregate_true_top_clustering_prop","text":"matrix contains aggregated true proportions top clusters.","code":""},{"path":"/reference/aggregate_true_top_clustering_prop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate True Proportions for Top-Level Clustering — aggregate_true_top_clustering_prop","text":"function iterates top-level clusters top_clusters_list. top-level cluster, identifies corresponding subclusters calculates sum true proportions. process continues aggregated true proportions top-level clusters calculated.","code":""},{"path":"/reference/calculate_best_cluster_global.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Best Global Cluster — calculate_best_cluster_global","title":"Calculate the Best Global Cluster — calculate_best_cluster_global","text":"Creates tree cluster groups levels. Decides number clusters minimize correlation , given list cell types.","code":""},{"path":"/reference/calculate_best_cluster_global.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Best Global Cluster — calculate_best_cluster_global","text":"","code":"calculate_best_cluster_global(   single_cell_data_exp,   var_cell_type,   subset_celltypes = NULL,   var_sample,   use_min_cor_strategy = TRUE,   delete_shared_level_markers = FALSE,   delete_shared_internal_markers = FALSE,   number_clusters_one_celltype = 1,   distance_method = \"euclidean\",   hclust_method = \"average\",   min_size_leaf = 3,   max_k_tried_hier_clustering = 3,   random_seed = NULL,   param.logfc.threshold = 2,   param.p_val_adj = 0.05,   filter_main_markers = TRUE,   verbose = FALSE )"},{"path":"/reference/calculate_best_cluster_global.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Best Global Cluster — calculate_best_cluster_global","text":"single_cell_data_exp data frame matrix containing single-cell expression data. var_cell_type vector factor indicating cell type cell. subset_celltypes vector cell types subset analysis. Default NULL, implying cell types used. var_sample vector factor indicating sample source cell. use_min_cor_strategy logical value indicating whether use minimum correlation strategy. Default TRUE. delete_shared_level_markers logical value indicating whether delete markers shared level hierarchy. Default FALSE. delete_shared_internal_markers logical value indicating whether delete markers shared internally. Default FALSE. number_clusters_one_celltype integer specifying number clusters cell type. Default 1. distance_method string specifying method compute distance. Default 'euclidean'. hclust_method string specifying method perform hierarchical clustering. Default 'average'. min_size_leaf integer specifying minimum size leaf hierarchical clustering. Default 3. max_k_tried_hier_clustering integer specifying maximum number clusters tried hierarchical clustering. Default 3. random_seed integer specifying random seed reproducibility. Default NULL. param.logfc.threshold numeric value indicating log-fold-change threshold marker selection. Default 2.0. param.p_val_adj numeric value indicating adjusted p-value threshold marker selection. Default 0.05. filter_main_markers logical value indicating whether filter main markers. Default TRUE. verbose logical value indicating whether print additional output computation. Default FALSE.","code":""},{"path":"/reference/calculate_best_cluster_global.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Best Global Cluster — calculate_best_cluster_global","text":"list containing results clustering process.","code":""},{"path":"/reference/calculate_best_clustering_generic.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Optimal Clustering at Generic Level — calculate_best_clustering_generic","title":"Calculate Optimal Clustering at Generic Level — calculate_best_clustering_generic","text":"function recursively analyses level clustering attempting separate 2, 3, 4 clusters. aim minimize correlation groups. subgroup, function called cluster contains 2 3 cell types. enables granular optimized clustering across different levels hierarchy.","code":""},{"path":"/reference/calculate_best_clustering_generic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Optimal Clustering at Generic Level — calculate_best_clustering_generic","text":"","code":"calculate_best_clustering_generic(   single_cell_data_exp,   reference,   var_cell_type,   cell_types,   var_sample,   tree_level = 0,   leaf_number = 1,   number_clusters_one_celltype = 1,   distance_method = \"euclidean\",   hclust_method = \"average\",   min_size_leaf = 3,   max_k_tried_hier_clustering = 3,   verbose = FALSE )"},{"path":"/reference/calculate_best_clustering_generic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Optimal Clustering at Generic Level — calculate_best_clustering_generic","text":"single_cell_data_exp data frame matrix containing single-cell expression data. reference reference data set object guide clustering process. var_cell_type string variable indicating cell type cell. cell_types vector cell types present data. var_sample string variable indicating sample cell. tree_level integer indicating current level tree hierarchy clustering process. Default 0. leaf_number integer indicating number leaf nodes tree hierarchy. Default 1. number_clusters_one_celltype integer indicating number clusters per cell type. Default 1. distance_method string indicating distance measure used clustering. Default 'euclidean'. hclust_method string indicating method used hierarchical clustering. Default 'average'. min_size_leaf integer indicating minimum size leaf nodes. Default 3. max_k_tried_hier_clustering integer indicating maximum number clusters tried hierarchical clustering. Default 3. verbose logical value indicating whether print additional output computation. Default FALSE.","code":""},{"path":"/reference/calculate_best_clustering_generic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Optimal Clustering at Generic Level — calculate_best_clustering_generic","text":"list containing optimal clustering results.","code":""},{"path":"/reference/calculate_joint_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Joint Correlation — calculate_joint_cor","title":"Calculate Joint Correlation — calculate_joint_cor","text":"function computes correlation among distinct groups within reference data based set marker genes. function calculates average joint correlation, reflects average correlation coefficient across possible pairs different groups.","code":""},{"path":"/reference/calculate_joint_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Joint Correlation — calculate_joint_cor","text":"","code":"calculate_joint_cor(reference, markers)"},{"path":"/reference/calculate_joint_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Joint Correlation — calculate_joint_cor","text":"reference matrix dataframe reference data, column representing sample row corresponding gene. markers vector marker genes, used subset reference dataset correlation computation. @import stats","code":""},{"path":"/reference/calculate_joint_cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Joint Correlation — calculate_joint_cor","text":"single numeric value representing average joint correlation.","code":""},{"path":"/reference/calculate_joint_cor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Joint Correlation — calculate_joint_cor","text":"function works initially calculating correlation matrix reference data subsetted specified marker genes. computes joint correlation summing correlation coefficients, excluding self-correlations (.e., correlation group ). sum divided number unique pair combinations different groups, yielding average joint correlation. result single numeric value representing average degree correlation different groups reference dataset based specified marker genes.","code":""},{"path":"/reference/calculate_k_clustering.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal k Clustering for Hierarchical Clustering — calculate_k_clustering","title":"Optimal k Clustering for Hierarchical Clustering — calculate_k_clustering","text":"function calculates optimal number (k) clusters hierarchical clustering given specific set cell types. can customized different distance measures agglomeration methods.","code":""},{"path":"/reference/calculate_k_clustering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal k Clustering for Hierarchical Clustering — calculate_k_clustering","text":"","code":"calculate_k_clustering(   single_cell_data_exp,   reference,   var_cell_type,   cell_types,   k_value,   var_sample,   distance_method = \"euclidean\",   hclust_method = \"average\",   extra_title = NULL,   verbose = TRUE )"},{"path":"/reference/calculate_k_clustering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal k Clustering for Hierarchical Clustering — calculate_k_clustering","text":"single_cell_data_exp data frame matrix containing single-cell expression data. reference reference data set object guide clustering process. var_cell_type string variable indicating cell type cell. cell_types vector cell types present data. k_value integer indicating number clusters created. var_sample string variable indicating sample cell. distance_method string indicating distance measure used clustering. must one \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\" \"minkowski\". unambiguous substring can given. Default 'euclidean'. hclust_method string indicating method used hierarchical clustering. (unambiguous abbreviation ) one \"ward.D\", \"ward.D2\", \"single\", \"complete\", \"average\" (= UPGMA), \"mcquitty\" (= WPGMA), \"median\" (= WPGMC) \"centroid\" (= UPGMC). Default 'average'. extra_title string used additional title plotting. verbose logical value indicating whether print additional output computation. Default TRUE.","code":""},{"path":"/reference/calculate_k_clustering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal k Clustering for Hierarchical Clustering — calculate_k_clustering","text":"list containing optimal k clustering results.","code":""},{"path":"/reference/calculate_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Marker Genes — calculate_markers","title":"Calculate Marker Genes — calculate_markers","text":"calculate_markers function identifies marker genes specific cell types based given criteria strategies. strategies help ensure marker genesidentified unique cell type, providing better accuracy downstream analysis.","code":""},{"path":"/reference/calculate_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Marker Genes — calculate_markers","text":"","code":"calculate_markers(   single_cell_data_exp,   reference,   group_clusters_var,   use_min_cor_strategy = FALSE,   delete_shared_level_markers = TRUE,   shared_level_markers = NULL,   delete_shared_internal_markers = TRUE,   p_value_attribute = \"p_val_adj\",   param.logfc.threshold = 2,   param.p_val_adj = 0.05,   test.use.value = \"wilcox\",   filter_markers = NULL,   marker_strategy = NULL,   verbose = TRUE )"},{"path":"/reference/calculate_markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Marker Genes — calculate_markers","text":"single_cell_data_exp data frame matrix containing single cell data. reference data frame matrix containing reference data. group_clusters_var variable name group clusters single_cell_data_exp. use_min_cor_strategy Logical value indicating whether use minimum correlation strategy. strategy used identify marker genes least correlated , thereby ensuring uniqueness. Default FALSE. delete_shared_level_markers Logical value indicating whether delete shared level markers. parameter enables removal marker genes shared across different levels ensure uniqueness within level. Default TRUE. shared_level_markers vector containing shared level markers. NULL default. delete_shared_internal_markers Logical value indicating whether delete shared internal markers. parameter allows removal marker genes common within given level, promote marker uniqueness. Default TRUE. p_value_attribute String indicating attribute name p-value single cell data. Default 'p_val_adj'. param.logfc.threshold Threshold log-fold change, determining minimum acceptable change gene considered marker. Default 2.0. param.p_val_adj Adjusted p-value threshold. threshold used control false discovery rate. Default 0.05. test.use.value String indicating statistical test used identifying markers. Default 'wilcox'. filter_markers vector containing markers filtered analysis. NULL default. marker_strategy Strategy used select marker genes. specific algorithm statistical method. NULL default. verbose Logical value indicating whether display additional information function's execution. Default TRUE.","code":""},{"path":"/reference/calculate_markers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Marker Genes — calculate_markers","text":"list marker genes cell type.","code":""},{"path":"/reference/calculate_markers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Marker Genes — calculate_markers","text":"function calculates marker genes cell type provided data, options apply different strategies filters process. considers factors p-value, log-fold change, uniqueness different levels ensure identified markers representative respective cell types.","code":""},{"path":[]},{"path":"/reference/calculate_markers_level_intersection.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of Marker Genes Intersection at Different Levels — calculate_markers_level_intersection","title":"Calculation of Marker Genes Intersection at Different Levels — calculate_markers_level_intersection","text":"calculate_markers_level_intersection computes intersection marker genes various levels clustering. function currently testing development, intending streamline code improve algorithm performance.","code":""},{"path":"/reference/calculate_markers_level_intersection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of Marker Genes Intersection at Different Levels — calculate_markers_level_intersection","text":"","code":"calculate_markers_level_intersection(   single_cell_data_exp,   top_clusters_var,   sub_clusters_var,   top_clusters_list,   param.logfc.threshold = 2,   param.p_val_adj = 0.05,   marker_strategy = NULL,   verbose = FALSE )"},{"path":"/reference/calculate_markers_level_intersection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of Marker Genes Intersection at Different Levels — calculate_markers_level_intersection","text":"single_cell_data_exp list data.frame representing single cell data. top_clusters_var string representing variable single_cell_data_exp used indicate top clusters. sub_clusters_var string representing variable single_cell_data_exp used indicate subclusters. top_clusters_list list vector indicating top clusters considered. param.logfc.threshold numeric value representing log fold change threshold marker genes. Default 2.0. param.p_val_adj numeric value representing adjusted p-value threshold marker genes. Default 0.05. marker_strategy character string specifying overall strategy marker gene handling. Default NULL. verbose logical value indicating whether print detailed output execution. Default FALSE.","code":""},{"path":"/reference/calculate_markers_level_intersection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of Marker Genes Intersection at Different Levels — calculate_markers_level_intersection","text":"list containing intersection marker genes different levels.","code":""},{"path":"/reference/calculate_min_correlation_incremental_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Minimum Correlation with Incremental Markers — calculate_min_correlation_incremental_markers","title":"Calculate Minimum Correlation with Incremental Markers — calculate_min_correlation_incremental_markers","text":"function processes list marker genes group, sorted descending order log2 fold change. objective determine number genes must selected achieve minimum correlation samples reference dataset. function designed incrementally add markers, starting display greatest change (indicated log2 fold change). new set markers, function calculates correlation samples reference dataset.","code":""},{"path":"/reference/calculate_min_correlation_incremental_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Minimum Correlation with Incremental Markers — calculate_min_correlation_incremental_markers","text":"","code":"calculate_min_correlation_incremental_markers(   list_markers,   reference,   minimum_markers = 4,   verbose = TRUE,   verbose_detailed = TRUE )"},{"path":"/reference/calculate_min_correlation_incremental_markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Minimum Correlation with Incremental Markers — calculate_min_correlation_incremental_markers","text":"list_markers list marker genes group, ordered log2 fold change descending order. reference reference dataset correlations calculated. minimum_markers minimum number marker genes selected, default set 4. can adjusted based analysis requirements. verbose TRUE, prints detailed information function execution. Default TRUE. verbose_detailed TRUE, prints even detailed information function execution. Default TRUE.","code":""},{"path":"/reference/calculate_min_correlation_incremental_markers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Minimum Correlation with Incremental Markers — calculate_min_correlation_incremental_markers","text":"data frame minimum number markers required achieve satisfactory level correlation.","code":""},{"path":"/reference/calculate_min_correlation_incremental_markers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Minimum Correlation with Incremental Markers — calculate_min_correlation_incremental_markers","text":"function begins including significant markers (highest log2 fold change) analysis calculates correlation samples reference dataset. process repeated, time adding markers, satisfactory level correlation reached. way, function attempts balance inclusion informative markers potential noise introduced less significant markers.","code":""},{"path":"/reference/calculate_p_values_wt_vs_ko.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate p-values for WT vs KO — calculate_p_values_wt_vs_ko","title":"Calculate p-values for WT vs KO — calculate_p_values_wt_vs_ko","text":"function calculates p-values wild type (WT) vs knockout (KO) based given results. information, check: https://www.cyclismo.org/tutorial/R/pValues.html","code":""},{"path":"/reference/calculate_p_values_wt_vs_ko.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate p-values for WT vs KO — calculate_p_values_wt_vs_ko","text":"","code":"calculate_p_values_wt_vs_ko(results.prop)"},{"path":"/reference/calculate_p_values_wt_vs_ko.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate p-values for WT vs KO — calculate_p_values_wt_vs_ko","text":"results.prop DataFrame, results used perform t-tests.","code":""},{"path":"/reference/calculate_p_values_wt_vs_ko.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate p-values for WT vs KO — calculate_p_values_wt_vs_ko","text":"return value. function prints result t-test cell type.","code":""},{"path":"/reference/calculate_p_values_wt_vs_ko.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate p-values for WT vs KO — calculate_p_values_wt_vs_ko","text":"function takes DataFrame results transposes . cell type present data, extracts WT KO results, performs t-test, prints result.","code":""},{"path":"/reference/calculate_performance_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Performance Metrics — calculate_performance_metrics","title":"Compute Performance Metrics — calculate_performance_metrics","text":"function calculates several performance metrics assess quality deconvolution results. metrics quantify accuracy estimated cell type proportions compared true proportions.","code":""},{"path":"/reference/calculate_performance_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Performance Metrics — calculate_performance_metrics","text":"","code":"calculate_performance_metrics(true_prop, calc_prop, digits = 20)"},{"path":"/reference/calculate_performance_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Performance Metrics — calculate_performance_metrics","text":"true_prop matrix dataframe true proportions. Rows correspond cell types columns samples. calc_prop matrix dataframe estimated proportions. structure true_prop. digits number decimal places computed metrics rounded. Default 20.","code":""},{"path":"/reference/calculate_performance_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Performance Metrics — calculate_performance_metrics","text":"list calculated performance metrics. element list represents different metric.","code":""},{"path":"/reference/calculate_performance_metrics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Performance Metrics — calculate_performance_metrics","text":"function computes performance metrics including Mean Absolute Error (MAE), Root Mean Squared Error (RMSE), Pearson Correlation Coefficient (r) assess accuracy deconvolution results. metrics calculated separately cell type sample. precision returned metrics can adjusted 'digits' parameter.","code":""},{"path":"/reference/calculate_prop_back_propagation.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescale Clustering Proportions Based on Higher Level Data — calculate_prop_back_propagation","title":"Rescale Clustering Proportions Based on Higher Level Data — calculate_prop_back_propagation","text":"calculate_prop_back_propagation function computes rescaled proportions higher level clustering based detailed proportions. assumes input top_proportions represent proportions single-leaf samples deconvolution.","code":""},{"path":"/reference/calculate_prop_back_propagation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescale Clustering Proportions Based on Higher Level Data — calculate_prop_back_propagation","text":"","code":"calculate_prop_back_propagation(   top_proportions,   level_proportions,   verbose = FALSE )"},{"path":"/reference/calculate_prop_back_propagation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescale Clustering Proportions Based on Higher Level Data — calculate_prop_back_propagation","text":"top_proportions numeric matrix proportions representing higher level clustering. level_proportions numeric matrix proportions representing detailed clustering. verbose logical value indicating whether print detailed output execution. Default FALSE.","code":""},{"path":"/reference/calculate_prop_back_propagation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rescale Clustering Proportions Based on Higher Level Data — calculate_prop_back_propagation","text":"numeric matrix rescaled proportions.","code":""},{"path":"/reference/calculate_prop_back_propagation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rescale Clustering Proportions Based on Higher Level Data — calculate_prop_back_propagation","text":"function applies specific calculation depending whether top_proportions numeric matrix. numeric, simply multiplies level_proportions top_proportions. matrix, applies sweep operation multiply column level_proportions corresponding column top_proportions. resulting proportions sum values top_proportions.","code":""},{"path":"/reference/calculate_sparseness_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Sparseness of a Matrix — calculate_sparseness_matrix","title":"Calculate Sparseness of a Matrix — calculate_sparseness_matrix","text":"function calculates sparseness given matrix, .e., percentage zero NA values matrix.","code":""},{"path":"/reference/calculate_sparseness_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Sparseness of a Matrix — calculate_sparseness_matrix","text":"","code":"calculate_sparseness_matrix(matrix_object)"},{"path":"/reference/calculate_sparseness_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Sparseness of a Matrix — calculate_sparseness_matrix","text":"matrix_object Matrix, matrix calculate sparseness.","code":""},{"path":"/reference/calculate_sparseness_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Sparseness of a Matrix — calculate_sparseness_matrix","text":"Numeric, sparseness matrix percentage.","code":""},{"path":"/reference/calculate_sparseness_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Sparseness of a Matrix — calculate_sparseness_matrix","text":"sparseness matrix defined percentage zero NA values total number entries matrix. function counts number non-zero non-NA values matrix, calculates sparseness (1 - (non-zero/total)) * 100.","code":""},{"path":"/reference/checkHT.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Acceptability of 'n' for 'head()' and 'tail()' Methods — checkHT","title":"Check Acceptability of 'n' for 'head()' and 'tail()' Methods — checkHT","text":"function checks acceptability 'n' 'head()' 'tail()' methods. encounter error related function, can load : https://svn.r-project.org/R/trunk/src/library/utils/R/head.R","code":""},{"path":"/reference/checkHT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Acceptability of 'n' for 'head()' and 'tail()' Methods — checkHT","text":"","code":"checkHT(n, d)"},{"path":"/reference/checkHT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Acceptability of 'n' for 'head()' and 'tail()' Methods — checkHT","text":"n number checked acceptability. d Data input function.","code":""},{"path":"/reference/checkHT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Acceptability of 'n' for 'head()' and 'tail()' Methods — checkHT","text":"Returns TRUE 'n' acceptable, FALSE otherwise.","code":""},{"path":"/reference/choose_model_from_grid_search_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Choose Model from Grid Search Result — choose_model_from_grid_search_object","title":"Choose Model from Grid Search Result — choose_model_from_grid_search_object","text":"function retrieves specific model grid search result based provided alpha beta parameters.","code":""},{"path":"/reference/choose_model_from_grid_search_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Choose Model from Grid Search Result — choose_model_from_grid_search_object","text":"","code":"choose_model_from_grid_search_object(   grid_search_result,   alpha = NULL,   beta = NULL )"},{"path":"/reference/choose_model_from_grid_search_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Choose Model from Grid Search Result — choose_model_from_grid_search_object","text":"grid_search_result list containing results grid search. element list represent one model include alpha beta parameters model. alpha Numeric, alpha parameter model returned. beta Numeric, beta parameter model returned.","code":""},{"path":"/reference/choose_model_from_grid_search_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Choose Model from Grid Search Result — choose_model_from_grid_search_object","text":"model 'grid_search_result' matches provided alpha beta parameters, NULL model exists.","code":""},{"path":"/reference/choose_model_from_grid_search_object.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Choose Model from Grid Search Result — choose_model_from_grid_search_object","text":"function iterates 'grid_search_result' list finds model matches provided alpha beta parameters. matching model found, function returns model; otherwise, returns NULL.","code":""},{"path":"/reference/create_dataframe_results_multiple_deconvolutions.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Data Frame of Multiple Deconvolution Results — create_dataframe_results_multiple_deconvolutions","title":"Create Data Frame of Multiple Deconvolution Results — create_dataframe_results_multiple_deconvolutions","text":"function creates summary data frame results multiple deconvolutions, typically obtained grid search procedure.","code":""},{"path":"/reference/create_dataframe_results_multiple_deconvolutions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Data Frame of Multiple Deconvolution Results — create_dataframe_results_multiple_deconvolutions","text":"","code":"create_dataframe_results_multiple_deconvolutions(grid_info)"},{"path":"/reference/create_dataframe_results_multiple_deconvolutions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Data Frame of Multiple Deconvolution Results — create_dataframe_results_multiple_deconvolutions","text":"grid_info list deconvolution results obtained grid search.","code":""},{"path":"/reference/create_dataframe_results_multiple_deconvolutions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Data Frame of Multiple Deconvolution Results — create_dataframe_results_multiple_deconvolutions","text":"data frame contains performance metrics deconvolution result, including alpha, beta, divergence value, delta divergence value, logarithmic forms.","code":""},{"path":"/reference/create_dataframe_results_multiple_deconvolutions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Data Frame of Multiple Deconvolution Results — create_dataframe_results_multiple_deconvolutions","text":"function iterates deconvolution results input list. result, extracts relevant performance metrics alpha, beta, divergence value, delta divergence value. metrics combined single data frame. Additionally, computes logarithm divergence delta divergence values, includes data frame well.","code":""},{"path":"/reference/decoflex_build_cell_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"decoflex_build_cell_reference — decoflex_build_cell_reference","title":"decoflex_build_cell_reference — decoflex_build_cell_reference","text":"function constructs reference matrix single cells, based ExpressionSet object. based function created SCDC R implementation. Please refer original implementation information: https://meichendong.github.io/SCDC/. Version: 0.0.0.9000","code":""},{"path":"/reference/decoflex_build_cell_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"decoflex_build_cell_reference — decoflex_build_cell_reference","text":"","code":"decoflex_build_cell_reference(   x,   ct.sub = NULL,   ct.varname,   sample,   ct.cell.size = NULL,   verbose = FALSE )"},{"path":"/reference/decoflex_build_cell_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"decoflex_build_cell_reference — decoflex_build_cell_reference","text":"x ExpressionSet object single cells. object serve basis construction reference matrix. ct.sub vector cell types selected construct reference matrix. parameter optional, default NULL. ct.varname string indicates variable name 'cell types' 'x' dataset. sample string indicates variable name subject/samples 'x' dataset. ct.cell.size vector cell size factors corresponding ct.sub according prior knowledge. default NULL, means \"library size\" calculated based data. vector provided, names vector (names(ct.cell.size)) NULL. verbose boolean flag controlling amount information printed execution function. Default FALSE.","code":""},{"path":"/reference/decoflex_build_cell_reference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"decoflex_build_cell_reference — decoflex_build_cell_reference","text":"list following components: basis: constructed reference matrix. detailed: detailed output SCDC_basis_ONE_final SCDC_basis_final, includes: Basis matrix Sum cell-type-specific library size Sample variance matrix Basis matrix mvw mvw matrix.","code":""},{"path":"/reference/decoflex_build_cell_reference.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"decoflex_build_cell_reference — decoflex_build_cell_reference","text":"SCDC: proportion estimation method single cell RNA-Seq data. https://meichendong.github.io/SCDC/.","code":""},{"path":"/reference/environment_creation.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up environment for NMMFlex — environment_creation","title":"Set up environment for NMMFlex — environment_creation","text":"environment_creation function installs verifies NMMFlex Python package prepare required environment using NMMFlex R.","code":""},{"path":"/reference/environment_creation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up environment for NMMFlex — environment_creation","text":"","code":"environment_creation()"},{"path":"/reference/environment_creation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up environment for NMMFlex — environment_creation","text":"function return value.","code":""},{"path":"/reference/filter_main_celltypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Main Cell Types with Markers — filter_main_celltypes","title":"Filter Main Cell Types with Markers — filter_main_celltypes","text":"Filters main cell types using marker genes performs clustering optimization filtered data.","code":""},{"path":"/reference/filter_main_celltypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Main Cell Types with Markers — filter_main_celltypes","text":"","code":"filter_main_celltypes(   single_cell_data_exp,   reference_celltypes_top,   group_clusters_var,   use_min_cor_strategy = TRUE,   delete_shared_level_markers = FALSE,   delete_shared_internal_markers = FALSE,   param.logfc.threshold = 2,   param.p_val_adj = 0.05,   verbose = FALSE )"},{"path":"/reference/filter_main_celltypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Main Cell Types with Markers — filter_main_celltypes","text":"single_cell_data_exp data frame matrix containing single-cell expression data. reference_celltypes_top list reference cell types used marker identification. group_clusters_var string variable indicating clusters cell. use_min_cor_strategy logical value indicating whether use minimum correlation strategy. Default TRUE. delete_shared_level_markers logical value indicating whether delete markers shared level hierarchy. Default FALSE. delete_shared_internal_markers logical value indicating whether delete markers shared internally. Default FALSE. param.logfc.threshold numeric value indicating log-fold-change threshold marker selection. Default 2.0. param.p_val_adj numeric value indicating adjusted p-value threshold marker selection. Default 0.05. verbose logical value indicating whether print additional output computation. Default FALSE.","code":""},{"path":"/reference/filter_main_celltypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Main Cell Types with Markers — filter_main_celltypes","text":"data frame matrix containing filtered single-cell data.","code":""},{"path":"/reference/generateBulk_allcells.html","id":null,"dir":"Reference","previous_headings":"","what":"generateBulk_allcells — generateBulk_allcells","title":"generateBulk_allcells — generateBulk_allcells","text":"function constructs Pseudo bulk samples single cells one subject based ExpressionSet object. based function created SCDC R implementation. Please refer original implementation information: https://meichendong.github.io/SCDC/. Version: 0.0.0.9000","code":""},{"path":"/reference/generateBulk_allcells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generateBulk_allcells — generateBulk_allcells","text":"","code":"generateBulk_allcells(   eset,   ct.varname,   sample,   disease = NULL,   ct.sub = NULL,   verbose = FALSE )"},{"path":"/reference/generateBulk_allcells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generateBulk_allcells — generateBulk_allcells","text":"eset ExpressionSet object single cells. object serve basis construction Pseudo bulk samples. ct.varname string indicates variable name 'cell types' 'eset' dataset. sample string indicates variable name subject/samples 'eset' dataset. disease string indicating health condition subjects. ct.sub vector cell types selected construct Pseudo bulk samples. parameter optional, default NULL. NULL, cell types used. verbose boolean flag controlling amount information printed execution function. Default FALSE.","code":""},{"path":"/reference/generateBulk_allcells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generateBulk_allcells — generateBulk_allcells","text":"list following components: Pseudo bulk samples ExpressionSet Actual cell-type proportions","code":""},{"path":"/reference/generateBulk_allcells.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"generateBulk_allcells — generateBulk_allcells","text":"SCDC: proportion estimation method single cell RNA-Seq data. https://meichendong.github.io/SCDC/.","code":""},{"path":"/reference/getESET.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an ExpressionSet object — getESET","title":"Create an ExpressionSet object — getESET","text":"function creates ExpressionSet object container storing gene expression data along related experimental data. ExpressionSet object includes expression matrix, feature data (fdata) phenotype data (pdata).","code":""},{"path":"/reference/getESET.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an ExpressionSet object — getESET","text":"","code":"getESET(exprs, fdata, pdata)"},{"path":"/reference/getESET.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an ExpressionSet object — getESET","text":"exprs matrix data frame expression values. Rows correspond features (e.g., genes) columns correspond samples. fdata data frame matrix feature data. row corresponds feature expression set columns correspond feature variables annotations. row names match row names exprs parameter. pdata data frame matrix phenotype data. row corresponds sample expression set columns correspond phenotype variables. row names match column names exprs parameter.","code":""},{"path":"/reference/getESET.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an ExpressionSet object — getESET","text":"ExpressionSet object includes expression data (exprs), phenotype data (pdata), feature data (fdata).","code":""},{"path":"/reference/hierachy_selection_plus_deconvolution.html","id":null,"dir":"Reference","previous_headings":"","what":"Hierarchy Selection Plus Deconvolution — hierachy_selection_plus_deconvolution","title":"Hierarchy Selection Plus Deconvolution — hierachy_selection_plus_deconvolution","text":"Runs clustering method deconvolution process given single-cell expression data.","code":""},{"path":"/reference/hierachy_selection_plus_deconvolution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hierarchy Selection Plus Deconvolution — hierachy_selection_plus_deconvolution","text":"","code":"hierachy_selection_plus_deconvolution(   single_cell_data_exp,   var_cell_type,   subset_celltypes = NULL,   var_sample,   number_clusters_one_celltype = 1,   distance_method = \"euclidean\",   hclust_method = \"average\",   min_size_leaf = 3,   max_k_tried_hier_clustering = 3,   random_seed = NULL,   use_min_cor_strategy = TRUE,   delete_shared_level_markers = FALSE,   delete_shared_internal_markers = FALSE,   filter_markers = NULL,   param.logfc.threshold = 2,   param.p_val_adj = 0.05,   filter_main_markers = TRUE,   verbose = FALSE )"},{"path":"/reference/hierachy_selection_plus_deconvolution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hierarchy Selection Plus Deconvolution — hierachy_selection_plus_deconvolution","text":"single_cell_data_exp data frame matrix containing single-cell expression data. var_cell_type vector factor indicating cell type cell. subset_celltypes vector cell types subset analysis. Default NULL, implying cell types used. var_sample vector factor indicating sample source cell. number_clusters_one_celltype integer specifying number clusters cell type. Default 1. distance_method string specifying method compute distance. Default 'euclidean'. hclust_method string specifying method perform hierarchical clustering. Default 'average'. min_size_leaf integer specifying minimum size leaf hierarchical clustering. Default 3. max_k_tried_hier_clustering integer specifying maximum number clusters tried hierarchical clustering. Default 3. random_seed integer specifying random seed reproducibility. Default NULL. use_min_cor_strategy logical value indicating whether use minimum correlation strategy. Default TRUE. delete_shared_level_markers logical value indicating whether delete markers shared level hierarchy. Default FALSE. delete_shared_internal_markers logical value indicating whether delete markers shared internally. Default FALSE. filter_markers vector specifying markers filter. Default NULL. param.logfc.threshold numeric value indicating log-fold-change threshold marker selection. Default 2.0. param.p_val_adj numeric value indicating adjusted p-value threshold marker selection. Default 0.05. filter_main_markers logical value indicating whether filter main markers. Default TRUE. verbose logical value indicating whether print additional output computation. Default FALSE.","code":""},{"path":"/reference/hierachy_selection_plus_deconvolution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hierarchy Selection Plus Deconvolution — hierachy_selection_plus_deconvolution","text":"list containing results clustering deconvolution process.","code":""},{"path":"/reference/join_back_propagation_proportions_leaves.html","id":null,"dir":"Reference","previous_headings":"","what":"Join Back-Propagation Proportions from Multiple Deconvolution Results — join_back_propagation_proportions_leaves","title":"Join Back-Propagation Proportions from Multiple Deconvolution Results — join_back_propagation_proportions_leaves","text":"join_back_propagation_proportions_leaves function iterates list deconvolution results merges back-propagated proportions result.","code":""},{"path":"/reference/join_back_propagation_proportions_leaves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join Back-Propagation Proportions from Multiple Deconvolution Results — join_back_propagation_proportions_leaves","text":"","code":"join_back_propagation_proportions_leaves(deco_results_list, verbose = FALSE)"},{"path":"/reference/join_back_propagation_proportions_leaves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join Back-Propagation Proportions from Multiple Deconvolution Results — join_back_propagation_proportions_leaves","text":"deco_results_list list containing deconvolution results. element list shouldbe list element named \"back_propagation_proportions_top_detailed\" contains back-propagated proportions. verbose logical value indicating whether print detailed output execution. Default FALSE.","code":""},{"path":"/reference/join_back_propagation_proportions_leaves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join Back-Propagation Proportions from Multiple Deconvolution Results — join_back_propagation_proportions_leaves","text":"matrix contains merged back-propagation proportions input deconvolution results.","code":""},{"path":"/reference/join_back_propagation_proportions_leaves.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Join Back-Propagation Proportions from Multiple Deconvolution Results — join_back_propagation_proportions_leaves","text":"function iterates deconvolution results deco_results_list. result, extracts back-propagation proportions, merges row-wise using rbind function. process continues back-propagation proportions deconvolution results merged.","code":""},{"path":"/reference/load_libraries.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Required Libraries — load_libraries","title":"Load Required Libraries — load_libraries","text":"function designed load NMMFlex library, Python package. function uses reticulate package facilitate interoperability R Python, allowing use Python scripts within R environment. NMMFlex needs located specific path local machine function work.","code":""},{"path":"/reference/load_libraries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Required Libraries — load_libraries","text":"","code":"load_libraries()"},{"path":"/reference/load_libraries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Required Libraries — load_libraries","text":"message indicating whether NMMFlex library successfully loaded.","code":""},{"path":"/reference/load_libraries.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load Required Libraries — load_libraries","text":"function first attempts install Python package local directory using reticulate::py_install. tries import package. import successful, confirms package installed loaded. , throws error message. Make sure adjust path location NMMFlex package machine.","code":""},{"path":"/reference/load_libraries.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Load Required Libraries — load_libraries","text":"Ensure Python package located provided path machine using function.","code":""},{"path":[]},{"path":"/reference/order_result_generic.html","id":null,"dir":"Reference","previous_headings":"","what":"Order Columns in a Matrix — order_result_generic","title":"Order Columns in a Matrix — order_result_generic","text":"function orders columns matrix based given starting position.","code":""},{"path":"/reference/order_result_generic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order Columns in a Matrix — order_result_generic","text":"","code":"order_result_generic(matrix, start = 7, verbose = FALSE)"},{"path":"/reference/order_result_generic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order Columns in a Matrix — order_result_generic","text":"matrix Matrix, matrix ordered. start Integer, column start ordering (default = 7). verbose Logical, TRUE, displays detailed messages execution (default = FALSE).","code":""},{"path":"/reference/order_result_generic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Order Columns in a Matrix — order_result_generic","text":"Matrix, ordered matrix.","code":""},{"path":"/reference/order_result_generic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Order Columns in a Matrix — order_result_generic","text":"function orders columns matrix starting position indicated 'start' parameter. creates new matrix concatenating ordered columns returns .","code":""},{"path":"/reference/order_simple_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Order Elements in a Vector — order_simple_vector","title":"Order Elements in a Vector — order_simple_vector","text":"function orders elements vector based given starting position.","code":""},{"path":"/reference/order_simple_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order Elements in a Vector — order_simple_vector","text":"","code":"order_simple_vector(vector, start = 5, verbose = FALSE)"},{"path":"/reference/order_simple_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order Elements in a Vector — order_simple_vector","text":"vector Vector, vector ordered. start Integer, position start ordering (default = 5). verbose Logical, TRUE, displays detailed messages execution (default = FALSE).","code":""},{"path":"/reference/order_simple_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Order Elements in a Vector — order_simple_vector","text":"Vector, ordered vector.","code":""},{"path":"/reference/order_simple_vector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Order Elements in a Vector — order_simple_vector","text":"function orders elements vector starting position indicated 'start' parameter. creates new vector concatenating ordered elements returns .","code":""},{"path":"/reference/performance_metrics_general.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and Print Performance Metrics — performance_metrics_general","title":"Calculate and Print Performance Metrics — performance_metrics_general","text":"function computes various performance metrics assess accuracy calculated cell type proportions relative true proportions. performance metrics computed clusters samples. results can optionally printed.","code":""},{"path":"/reference/performance_metrics_general.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and Print Performance Metrics — performance_metrics_general","text":"","code":"performance_metrics_general(   true_prop,   calc_prop,   title = NULL,   verbose = FALSE )"},{"path":"/reference/performance_metrics_general.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and Print Performance Metrics — performance_metrics_general","text":"true_prop matrix dataframe true proportions. Rows correspond cell types columns samples. calc_prop matrix dataframe calculated proportions. structure true_prop. title Optional title print output. verbose TRUE, performance metrics printed. Default FALSE.","code":""},{"path":"/reference/performance_metrics_general.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and Print Performance Metrics — performance_metrics_general","text":"list three elements: 'pm_clusters' contains performance metrics clusters, 'pm_samples' contains performance metrics samples, true_prop' contains true proportions, 'calc_prop' contains calculated proportions.","code":""},{"path":"/reference/performance_metrics_general.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate and Print Performance Metrics — performance_metrics_general","text":"function computes performance metrics, mean absolute error, root mean squared error, correlation coefficient, using 'calculate_performance_metrics' function. metrics calculated cell type (.e., clusters) sample. verbose set TRUE, metrics printed 'print_performance_metrics' function.","code":""},{"path":"/reference/performance_plot_multiple_deconvolutions.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Performance of Multiple Deconvolutions — performance_plot_multiple_deconvolutions","title":"Plot Performance of Multiple Deconvolutions — performance_plot_multiple_deconvolutions","text":"function generates plot showing performance multiple deconvolutions. plot visualizes divergence delta divergence metrics main parameter interest. Besides used plotting results gridSearch general level.","code":""},{"path":"/reference/performance_plot_multiple_deconvolutions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Performance of Multiple Deconvolutions — performance_plot_multiple_deconvolutions","text":"","code":"performance_plot_multiple_deconvolutions(   performance_df,   main_parameter = \"alpha\" )"},{"path":"/reference/performance_plot_multiple_deconvolutions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Performance of Multiple Deconvolutions — performance_plot_multiple_deconvolutions","text":"performance_df data frame contains performance metrics deconvolution result. data frame include main parameter, divergence, delta divergence values. main_parameter string specifies name main parameter plotted x-axis.parameter column 'performance_df' data frame.","code":""},{"path":"/reference/performance_plot_multiple_deconvolutions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Performance of Multiple Deconvolutions — performance_plot_multiple_deconvolutions","text":"ggplot object showing performance multiple deconvolutions specified main parameter.","code":""},{"path":"/reference/performance_plot_multiple_deconvolutions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Performance of Multiple Deconvolutions — performance_plot_multiple_deconvolutions","text":"function uses ggplot2 generate line plot y-axis represents logarithmic values divergence delta divergence metrics, x-axis represents main parameter. divergence delta divergence metrics differentiated color.","code":""},{"path":"/reference/plot_deconvolution_performance.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Deconvolution Performance Metrics — plot_deconvolution_performance","title":"Plot Deconvolution Performance Metrics — plot_deconvolution_performance","text":"function plots various performance metrics deconvolution process across multiple iterations. Function gridSearch analysis: General plots.","code":""},{"path":"/reference/plot_deconvolution_performance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Deconvolution Performance Metrics — plot_deconvolution_performance","text":"","code":"plot_deconvolution_performance(running_info, title_addition = \"\")"},{"path":"/reference/plot_deconvolution_performance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Deconvolution Performance Metrics — plot_deconvolution_performance","text":"running_info data frame iteration number corresponding values divergence delta divergence. title_addition optional string added plot title.","code":""},{"path":"/reference/plot_deconvolution_performance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Deconvolution Performance Metrics — plot_deconvolution_performance","text":"function returns list ggplot objects, representing different visualization deconvolution performance.","code":""},{"path":"/reference/plot_deconvolution_performance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Deconvolution Performance Metrics — plot_deconvolution_performance","text":"function creates three plots visualize performance deconvolution process: natural logarithm divergence value iterations. natural logarithm delta divergence value iterations. metrics plot. divergence value provides measure much deconvolution results deviate ground truth, delta divergence gives measure much divergence changes successive iterations.","code":""},{"path":"/reference/plot_deconvolution_performance_x_y_z_total.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Detailed Deconvolution Performance — plot_deconvolution_performance_x_y_z_total","title":"Plot Detailed Deconvolution Performance — plot_deconvolution_performance_x_y_z_total","text":"function plots detailed performance deconvolution respect x, y, z, total divergence. specified, y z divergence values can scaled given alpha beta parameters.","code":""},{"path":"/reference/plot_deconvolution_performance_x_y_z_total.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Detailed Deconvolution Performance — plot_deconvolution_performance_x_y_z_total","text":"","code":"plot_deconvolution_performance_x_y_z_total(   running_info,   title_addition = \"\",   alpha = NULL,   beta = NULL,   scale_parameters = FALSE )"},{"path":"/reference/plot_deconvolution_performance_x_y_z_total.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Detailed Deconvolution Performance — plot_deconvolution_performance_x_y_z_total","text":"running_info Data frame, running information deconvolution. title_addition Character, optional string added plot title. Optional, default ''. alpha Numeric, alpha value scale y divergence. Optional, default NULL. beta Numeric, beta value scale z divergence. Optional, default NULL. scale_parameters Logical, whether scale y z divergence values given alpha beta. Optional, default FALSE.","code":""},{"path":"/reference/plot_deconvolution_performance_x_y_z_total.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Detailed Deconvolution Performance — plot_deconvolution_performance_x_y_z_total","text":"ggplot2 object representing plot.","code":""},{"path":"/reference/plot_deconvolution_performance_x_y_z_total.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Detailed Deconvolution Performance — plot_deconvolution_performance_x_y_z_total","text":"function generates line plot showing log divergence values (x, y, z, total, delta) iterations. line color specified according type divergence. divergence values y z can scaled specified alpha beta parameters 'scale_parameters' TRUE.","code":""},{"path":"/reference/plot_heatmap_alpha_beta.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Heatmap of Alpha and Beta Values — plot_heatmap_alpha_beta","title":"Plot Heatmap of Alpha and Beta Values — plot_heatmap_alpha_beta","text":"function generates heatmap showing divergence value combination alpha beta values. visualization aids identifying optimal alpha beta parameters.","code":""},{"path":"/reference/plot_heatmap_alpha_beta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Heatmap of Alpha and Beta Values — plot_heatmap_alpha_beta","text":"","code":"plot_heatmap_alpha_beta(   performance_df,   fill_value = \"divergence_value\",   title = \"Divergence performance: alpha vs beta\" )"},{"path":"/reference/plot_heatmap_alpha_beta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Heatmap of Alpha and Beta Values — plot_heatmap_alpha_beta","text":"performance_df data frame contains performance metrics alpha, beta combination. data frame include columns alpha, beta, divergence value. fill_value string indicating column used filling heatmap. Default \"divergence_value\". title string specifying title plot. Default 'Divergence performance: alpha vs beta'.","code":""},{"path":"/reference/plot_heatmap_alpha_beta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Heatmap of Alpha and Beta Values — plot_heatmap_alpha_beta","text":"ggplot object showing heatmap divergence values different combinations alpha beta values.","code":""},{"path":"/reference/plot_heatmap_alpha_beta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Heatmap of Alpha and Beta Values — plot_heatmap_alpha_beta","text":"function uses ggplot2 generate heatmap x-axis represents alpha values y-axis represents beta values. color fill tile determined 'fill_value' parameter, typically set 'divergence_value'.","code":""},{"path":"/reference/plot_heatmap_correlation_deconvolution_vs_true_Edec.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Heatmap of Correlation Between Deconvolution Results and True Values — plot_heatmap_correlation_deconvolution_vs_true_Edec","title":"Plot Heatmap of Correlation Between Deconvolution Results and True Values — plot_heatmap_correlation_deconvolution_vs_true_Edec","text":"function plots heatmap showing correlation deconvolution results true values. first calculates correlation matrix estimated methylation profiles reference methylation profiles. identifies references highest correlation estimated methylation profiles. Finally, plots heatmap correlations.","code":""},{"path":"/reference/plot_heatmap_correlation_deconvolution_vs_true_Edec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Heatmap of Correlation Between Deconvolution Results and True Values — plot_heatmap_correlation_deconvolution_vs_true_Edec","text":"","code":"plot_heatmap_correlation_deconvolution_vs_true_Edec(   reference_meth,   reference_meth_class,   deco.results.w,   markers_ovr,   k = 4 )"},{"path":"/reference/plot_heatmap_correlation_deconvolution_vs_true_Edec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Heatmap of Correlation Between Deconvolution Results and True Values — plot_heatmap_correlation_deconvolution_vs_true_Edec","text":"reference_meth Methylation reference cell-types analysis.  one present : EDecExampleData::reference_meth reference_meth_class Class methylation reference. one present EDecExampleData::reference_meth_class. deco.results.w matrix rows overrepresented markers columns estimated methylation profiles. matrix contains deconvolution results. markers_ovr vector containing overrepresented markers. k number clusters consider identifying references highest correlation. Defaults 4.","code":""},{"path":"/reference/plot_heatmap_correlation_deconvolution_vs_true_Edec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Heatmap of Correlation Between Deconvolution Results and True Values — plot_heatmap_correlation_deconvolution_vs_true_Edec","text":"function return value. generates heatmap plot graphics device.","code":""},{"path":"/reference/plot_heatmap_correlation_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Heatmap of Correlation Among Cell-Types or Groups — plot_heatmap_correlation_reference","title":"Plot Heatmap of Correlation Among Cell-Types or Groups — plot_heatmap_correlation_reference","text":"function creates heatmap visually display correlation different cell-types groups cell-types. color gradient heatmap represents correlation coefficient values, providing clear visual summary correlations data.","code":""},{"path":"/reference/plot_heatmap_correlation_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Heatmap of Correlation Among Cell-Types or Groups — plot_heatmap_correlation_reference","text":"","code":"plot_heatmap_correlation_reference(reference_w.k.celltypes, title = \"Heatmap\")"},{"path":"/reference/plot_heatmap_correlation_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Heatmap of Correlation Among Cell-Types or Groups — plot_heatmap_correlation_reference","text":"reference_w.k.celltypes data frame containing cell-types groups cell-types corresponding basis values. title Optional; character string representing title heatmap. provided, title defaults 'Heatmap'.","code":""},{"path":"/reference/plot_heatmap_correlation_reference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Heatmap of Correlation Among Cell-Types or Groups — plot_heatmap_correlation_reference","text":"function generates heatmap side-effect. return value. @import grDevices @import ggplot2 @import gplots @import graphics @import stats","code":""},{"path":"/reference/plot_hierarchical_clustering.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot hierarchical clustering — plot_hierarchical_clustering","title":"Plot hierarchical clustering — plot_hierarchical_clustering","text":"function generates plot hierarchical clustering includes option custom title. plot visualizes dendrogram resulting clustering, height cut denoted green line. Clusters resulting cut highlighted green borders. function also outputs table summarizing resulting cluster assignments.","code":""},{"path":"/reference/plot_hierarchical_clustering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot hierarchical clustering — plot_hierarchical_clustering","text":"","code":"plot_hierarchical_clustering(   hierar_clust,   k_value,   fit_celltypes,   title = NULL )"},{"path":"/reference/plot_hierarchical_clustering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot hierarchical clustering — plot_hierarchical_clustering","text":"hierar_clust hierarchical clustering object, result hclust function similar. k_value integer value indicating number clusters highlight plot. fit_celltypes vector containing assignment data point cluster. title Optional; character string representing title plot. NULL, title added.","code":""},{"path":"/reference/plot_hierarchical_clustering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot hierarchical clustering — plot_hierarchical_clustering","text":"function generates plot side-effect. returned value table summarizing cluster assignments.","code":""},{"path":"/reference/plot_performance_for_each_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Performance for Each Model — plot_performance_for_each_model","title":"Plot Performance for Each Model — plot_performance_for_each_model","text":"function plots performance model grid search result based specified alpha beta values.","code":""},{"path":"/reference/plot_performance_for_each_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Performance for Each Model — plot_performance_for_each_model","text":"","code":"plot_performance_for_each_model(   grid_search_result,   alpha = NULL,   beta = NULL,   plot_type = \"summary\",   scale_parameters = FALSE,   save.pdf = FALSE,   path.pdf = NULL )"},{"path":"/reference/plot_performance_for_each_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Performance for Each Model — plot_performance_for_each_model","text":"grid_search_result list object contains results grid search. alpha Numeric, alpha value filter models plot. Optional, default NULL. beta Numeric, beta value filter models plot. Optional, default NULL. plot_type Character, specifies type plot produce. Options 'summary' (default) types supported underlying plotting function. scale_parameters Logical, whether scale parameters plot. Optional, default FALSE. save.pdf Logical, whether save plot PDF. Optional, default FALSE. path.pdf String, path save PDF file 'save.pdf' TRUE. Optional, default NULL.","code":""},{"path":"/reference/plot_performance_for_each_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Performance for Each Model — plot_performance_for_each_model","text":"function used side effects creating optionally saving plots. return anything.","code":""},{"path":"/reference/plot_performance_for_each_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Performance for Each Model — plot_performance_for_each_model","text":"function iterates model grid search result. model, produces plot based 'plot_type' argument. filters models plot based 'alpha' 'beta' arguments. 'save.pdf' TRUE, saves plot PDF file specified path current working directory path specified.","code":""},{"path":"/reference/print_performance_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Display Performance Metrics — print_performance_metrics","title":"Display Performance Metrics — print_performance_metrics","text":"function neatly prints calculated performance metrics, facilitating interpretation deconvolution results.","code":""},{"path":"/reference/print_performance_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display Performance Metrics — print_performance_metrics","text":"","code":"print_performance_metrics(list_metrics, title = NULL)"},{"path":"/reference/print_performance_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display Performance Metrics — print_performance_metrics","text":"list_metrics list calculated performance metrics, produced calculate_performance_metrics() function. title optional title printed metrics. Default NULL.","code":""},{"path":"/reference/print_performance_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display Performance Metrics — print_performance_metrics","text":"NULL. function used side effect printing metrics.","code":""},{"path":"/reference/print_performance_metrics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Display Performance Metrics — print_performance_metrics","text":"function takes input list performance metrics, include metrics Mean Absolute Error (MAE), Root Mean Squared Error (RMSE), Pearson Correlation Coefficient (r). metrics printed structured format easy interpretation. optional 'title' parameter can used give printed metrics descriptive title.","code":""},{"path":"/reference/recalculate_proportions.html","id":null,"dir":"Reference","previous_headings":"","what":"Recalculate Cell Type Proportions — recalculate_proportions","title":"Recalculate Cell Type Proportions — recalculate_proportions","text":"function recalculates proportions cell types based top-level clustering proportions granular sub-cluster proportions.","code":""},{"path":"/reference/recalculate_proportions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recalculate Cell Type Proportions — recalculate_proportions","text":"","code":"recalculate_proportions(   top_cluster_deco_list,   top_clusters_list,   subcluster_deco_list,   verbose = FALSE )"},{"path":"/reference/recalculate_proportions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recalculate Cell Type Proportions — recalculate_proportions","text":"top_cluster_deco_list list containing deconvolution results top-level clusters. top_clusters_list vector containing names identifiers top-level clusters. subcluster_deco_list list deconvolution results sub-clusters. verbose logical indicating whether print detailed messages function running. Default FALSE.","code":""},{"path":"/reference/recalculate_proportions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recalculate Cell Type Proportions — recalculate_proportions","text":"matrix row represents cell type column represents sample. entry matrix represents recalculated proportion cell type sample.","code":""},{"path":"/reference/recalculate_proportions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recalculate Cell Type Proportions — recalculate_proportions","text":"function takes input top-level cluster proportions list sub-cluster deconvolution results. scales sub-cluster proportions corresponding top-level cluster proportions combines proportions. results updated set cell type proportions reflects hierarchical structure clustering.","code":""},{"path":"/reference/run_deconvolution_simulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Deconvolution Simulation — run_deconvolution_simulation","title":"Deconvolution Simulation — run_deconvolution_simulation","text":"function performs detailed simulation deconvolution process single cell expression data. allows inclusion multiple cluster levels (top level sub level clusters), customization various parameters marker strategy, log fold change threshold, adjusted p-value threshold. function also supports minimum correlation strategy deconvolution, providing flexibility simulation approach. Verbose mode can enabled additional execution details. Note: encounter error related function 'checkHT', can load : https://svn.r-project.org/R/trunk/src/library/utils/R/head.R","code":""},{"path":"/reference/run_deconvolution_simulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deconvolution Simulation — run_deconvolution_simulation","text":"","code":"run_deconvolution_simulation(   single_cell_data_exp,   top_clusters_var,   top_clusters_list,   sub_clusters_var,   sub_clusters_list,   sample,   use_min_cor_strategy = FALSE,   delete_shared_level_markers = TRUE,   delete_shared_internal_markers = TRUE,   filter_markers = NULL,   param.logfc.threshold = 2,   param.p_val_adj = 0.05,   marker_strategy = \"keep_default_values\",   verbose = FALSE )"},{"path":"/reference/run_deconvolution_simulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deconvolution Simulation — run_deconvolution_simulation","text":"single_cell_data_exp data frame representing single cell data deconvolution simulation. top_clusters_var vector indicating top clusters variables. top_clusters_list list containing top clusters. sub_clusters_var vector indicating sub clusters variables. sub_clusters_list list containing sub clusters. sample numeric integer value indicating sample size deconvolution simulation. use_min_cor_strategy boolean. TRUE, function uses minimum correlation strategy. Default FALSE. delete_shared_level_markers boolean. TRUE, shared level markers deleted. Default TRUE. delete_shared_internal_markers boolean. TRUE, shared internal markers deleted. Default TRUE. filter_markers vector markers filter, NULL. Default NULL param.logfc.threshold numeric value indicating log fold change threshold. Default 2.0. param.p_val_adj numeric value indicating adjusted p-value threshold. Default 0.05. marker_strategy character string specifying marker strategy. Default 'keep_default_values'. verbose boolean. TRUE, function print additional details execution. Default FALSE.","code":""},{"path":"/reference/run_deconvolution_simulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deconvolution Simulation — run_deconvolution_simulation","text":"list containing results deconvolution simulation. might include estimated sources, final weights, relevant output depending actual implementation function.","code":""},{"path":"/reference/run_deconvolution_simulation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deconvolution Simulation — run_deconvolution_simulation","text":"Tree Guided Deconvolution Functions script, tree_guided_deconvolution.R, part Decoflex package. includes following functions: add_grouping_single_cell() function adding single cell groupings. aggregate_true_top_clustering_prop() function aggregate true top clustering proportions. calculate_joint_cor() function calculate joint correlation. calculate_markers() function calculate markers. calculate_markers_level_intersection() function calculate markers level intersection. calculate_min_correlation_incremental_markers() function calculate minimum correlation incremental markers. calculate_performance_metrics() function calculate performance metrics. calculate_prop_back_propagation() function calculate proportion back propagation. FindMarkers.proxy() proxy function find markers. join_back_propagation_proportions_leaves() function join back propagation proportions leaves. performance_metrics_general() function calculate general performance metrics. print_performance_metrics() function print performance metrics. recalculate_proportions() function recalculate proportions. run_deconvolution_simulation_generic() function run generic deconvolution simulations. run_deconvolution_tree_guided() function run tree-guided deconvolution. run_deconvolution_tree_guided_recursive() recursive function run tree-guided deconvolution.","code":""},{"path":"/reference/run_deconvolution_simulation_generic.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic Deconvolution Simulation — run_deconvolution_simulation_generic","title":"Generic Deconvolution Simulation — run_deconvolution_simulation_generic","text":"function generalized form deconvolution simulation process applicable single cell data. allows users modify various parameters like marker strategy, log fold change threshold, adjusted p-value threshold. setting use_min_cor_strategy TRUE, function apply minimum correlation strategy deconvolution.","code":""},{"path":"/reference/run_deconvolution_simulation_generic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic Deconvolution Simulation — run_deconvolution_simulation_generic","text":"","code":"run_deconvolution_simulation_generic(   single_cell_data_exp,   top_clusters_var,   top_clusters_list,   sub_clusters_var,   sub_clusters_list,   sample,   use_min_cor_strategy = FALSE,   delete_shared_level_markers = TRUE,   delete_shared_internal_markers = TRUE,   filter_markers = NULL,   param.logfc.threshold = 2,   param.p_val_adj = 0.05,   marker_strategy = NULL,   verbose = FALSE )"},{"path":"/reference/run_deconvolution_simulation_generic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic Deconvolution Simulation — run_deconvolution_simulation_generic","text":"single_cell_data_exp data frame representing single cell data deconvolution simulation. top_clusters_var vector indicating top clusters variables. top_clusters_list list containing top clusters. sub_clusters_var vector indicating sub clusters variables. sub_clusters_list list containing sub clusters. sample numeric integer value indicating sample size deconvolution simulation. use_min_cor_strategy boolean. TRUE, function uses minimum correlation strategy. Default FALSE. delete_shared_level_markers boolean. TRUE, shared level markers deleted. Default TRUE. delete_shared_internal_markers boolean. TRUE, shared internal markers deleted. Default TRUE. filter_markers vector markers filter, NULL. Default NULL param.logfc.threshold numeric value indicating log fold change threshold. Default 2.0. param.p_val_adj numeric value indicating adjusted p-value threshold. Default 0.05. marker_strategy character string specifying marker strategy, NULL. Default NULL. verbose boolean. TRUE, function print additional details execution. Default FALSE.","code":""},{"path":"/reference/run_deconvolution_simulation_generic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic Deconvolution Simulation — run_deconvolution_simulation_generic","text":"list containing results deconvolution simulation. might include estimated sources, final weights, relevant output depending actual implementation function.","code":""},{"path":"/reference/run_deconvolution_simulation_generic_recursive.html","id":null,"dir":"Reference","previous_headings":"","what":"run_deconvolution_simulation_generic_recursive — run_deconvolution_simulation_generic_recursive","title":"run_deconvolution_simulation_generic_recursive — run_deconvolution_simulation_generic_recursive","text":"Perform recursive deconvolution simulation given single cell data. function handles first top node hierarchy send rest recursive algorithm","code":""},{"path":"/reference/run_deconvolution_simulation_generic_recursive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run_deconvolution_simulation_generic_recursive — run_deconvolution_simulation_generic_recursive","text":"","code":"run_deconvolution_simulation_generic_recursive(   single_cell_data_exp,   hierarchy,   sub_clusters_var,   sample,   use_min_cor_strategy = TRUE,   delete_shared_level_markers = FALSE,   delete_shared_internal_markers = FALSE,   deconvolute_just_top = FALSE,   filter_markers = NULL,   param.logfc.threshold = 2,   param.p_val_adj = 0.05,   marker_strategy = NULL,   verbose = FALSE )"},{"path":"/reference/run_deconvolution_simulation_generic_recursive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run_deconvolution_simulation_generic_recursive — run_deconvolution_simulation_generic_recursive","text":"single_cell_data_exp data frame contains single cell expression data. hierarchy list outlines hierarchy cell types. sub_clusters_var variable represents subclusters data. sample variable represents samples data. use_min_cor_strategy logical parameter indicating whether use minimum correlation strategy. Defaults TRUE. delete_shared_level_markers logical parameter indicating whether delete shared level markers. Defaults FALSE. delete_shared_internal_markers logical parameter indicating whether delete shared internal markers. Defaults FALSE. deconvolute_just_top logical parameter indicating whether deconvolute top. Defaults FALSE. filter_markers parameter specifying markers filter, defaults NULL. param.logfc.threshold numeric value specifying threshold log fold change, defaults 2.0. param.p_val_adj numeric value specifying threshold adjusted p-values, defaults 0.05. marker_strategy Strategy selecting markers, defaults NULL. verbose logical parameter indicating whether print detailed messages execution function. Defaults FALSE.","code":""},{"path":"/reference/run_deconvolution_simulation_generic_recursive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"run_deconvolution_simulation_generic_recursive — run_deconvolution_simulation_generic_recursive","text":"list containing deconvolution result pseudo bulk data.","code":""},{"path":"/reference/run_deconvolution_tree_guided.html","id":null,"dir":"Reference","previous_headings":"","what":"Tree-guided Deconvolution of Bulk Data — run_deconvolution_tree_guided","title":"Tree-guided Deconvolution of Bulk Data — run_deconvolution_tree_guided","text":"run_deconvolution_tree_guided generic function deconvoluting bulk data based reference single-cell dataset using tree-guided method.","code":""},{"path":"/reference/run_deconvolution_tree_guided.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tree-guided Deconvolution of Bulk Data — run_deconvolution_tree_guided","text":"","code":"run_deconvolution_tree_guided(   bulk_data,   single_cell_data_exp,   top_clusters_var,   top_clusters_list,   sub_clusters_var,   sub_clusters_list,   sample,   use_min_cor_strategy = FALSE,   true_proportions = NULL,   delete_shared_level_markers = TRUE,   delete_shared_internal_markers = TRUE,   filter_markers = NULL,   param.logfc.threshold = 2,   param.p_val_adj = 0.05,   test.use.value = \"wilcox\",   calculate_markers = \"\",   marker_strategy = NULL,   verbose = FALSE )"},{"path":"/reference/run_deconvolution_tree_guided.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tree-guided Deconvolution of Bulk Data — run_deconvolution_tree_guided","text":"bulk_data numeric matrix representing bulk data deconvoluted. single_cell_data_exp list data.frame representing single cell data. top_clusters_var string representing variable single_cell_data_exp used indicate top clusters. top_clusters_list list vector indicating top clusters considered. sub_clusters_var string representing variable single_cell_data_exp used indicate subclusters. sub_clusters_list list vector indicating subclusters considered. sample string numeric value indicating specific sample use. use_min_cor_strategy logical value indicating whether use minimal correlation strategy. Default FALSE. true_proportions numeric vector representing true proportions clusters, known. Default NULL. delete_shared_level_markers logical value indicating whether delete shared markers level. Default TRUE. delete_shared_internal_markers logical value indicating whether delete shared markers within group. Default TRUE. filter_markers character string specifying filtering strategy markers. Default NULL. param.logfc.threshold numeric value representing log fold change threshold marker genes. Default 2.0. param.p_val_adj numeric value representing adjusted p-value threshold marker genes. Default 0.05. test.use.value string specifying test use marker gene identification. Default 'wilcox'. calculate_markers character string specifying strategy marker gene calculation. Default ''. marker_strategy character string specifying overall strategy marker gene handling. Default NULL. verbose logical value indicating whether print detailed output execution. Default FALSE.","code":""},{"path":"/reference/run_deconvolution_tree_guided.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tree-guided Deconvolution of Bulk Data — run_deconvolution_tree_guided","text":"list containing deconvoluted bulk data.","code":""},{"path":"/reference/run_deconvolution_tree_guided_recursive.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Deconvolution Tree Guided Recursively — run_deconvolution_tree_guided_recursive","title":"Run Deconvolution Tree Guided Recursively — run_deconvolution_tree_guided_recursive","text":"function uses tree-guided method perform recursive deconvolution operation bulk single-cell data. recursive method helps analyzing hierarchically structured data, usually encountered biological systems set cell types hierarchically organized based molecular similarity. method starts top level, identifies clusters, calculates markers, performs deconvolution, propagates information back guide deconvolution next level.","code":""},{"path":"/reference/run_deconvolution_tree_guided_recursive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Deconvolution Tree Guided Recursively — run_deconvolution_tree_guided_recursive","text":"","code":"run_deconvolution_tree_guided_recursive(   result_deco_top = NULL,   bulk_data,   true_proportions = NULL,   single_cell_data_exp,   sub_clusters_var,   hierarchy,   sample,   use_min_cor_strategy = TRUE,   delete_shared_level_markers = FALSE,   delete_shared_internal_markers = FALSE,   deconvolute_just_top = FALSE,   deconvolute_top_hierarchy_limit = 1,   filter_markers = NULL,   param.logfc.threshold = 2,   param.p_val_adj = 0.05,   test.use.value = \"wilcox\",   marker_strategy = NULL,   verbose = FALSE )"},{"path":"/reference/run_deconvolution_tree_guided_recursive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Deconvolution Tree Guided Recursively — run_deconvolution_tree_guided_recursive","text":"result_deco_top list representing result deconvolution top level hierarchy. NULL (default), function starts root tree. bulk_data bulk data deconvolution needs performed. true_proportions optional matrix representing true proportions cell types. can used calculate accuracy deconvolution. NULL (default), accuracy calculation skipped. single_cell_data_exp data frame representing single cell expression data, used guide deconvolution process. sub_clusters_var string representing variable single_cell_data_exp indicates sub-clusters. hierarchy list structure describing hierarchy cell type clustering. sample string representing sample name. use_min_cor_strategy boolean indicating whether use minimum correlation strategy marker calculation phase. Default TRUE. delete_shared_level_markers boolean indicating whether delete shared level markers marker calculation phase. Default FALSE. delete_shared_internal_markers boolean indicating whether delete shared internal markers marker calculation phase. Default FALSE. deconvolute_just_top boolean indicating whether perform deconvolution top level. TRUE (default FALSE), function stops deconvoluting top level returns result. deconvolute_top_hierarchy_limit integer indicating top hierarchy limit deconvolution. Default 1. filter_markers optional list markers used filtering marker calculation phase. NULL (default), filtering performed. param.logfc.threshold numeric value representing log-fold-change threshold marker calculation. Default 2.0. param.p_val_adj numeric value representing adjusted p-value threshold marker calculation. Default 0.05. test.use.value string indicating statistical test use marker calculation. Default 'wilcox'. marker_strategy optional string representing marker selection strategy. NULL (default), default strategy used. verbose boolean indicating whether print detailed messages execution function. Default FALSE.","code":""},{"path":"/reference/run_deconvolution_tree_guided_recursive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Deconvolution Tree Guided Recursively — run_deconvolution_tree_guided_recursive","text":"list containing result top level deconvolution, list deconvolution results level, back-propagated proportions top level.","code":""},{"path":"/reference/run_standard_deconvolution.html","id":null,"dir":"Reference","previous_headings":"","what":"Run standard deconvolution — run_standard_deconvolution","title":"Run standard deconvolution — run_standard_deconvolution","text":"function wrapper MMNF library python used running standard deconvolution process. involves estimating source distribution mixture model given observed data.","code":""},{"path":"/reference/run_standard_deconvolution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run standard deconvolution — run_standard_deconvolution","text":"","code":"run_standard_deconvolution(   bulk_data_x,   references_w,   markers = NULL,   max_iterations = 10000,   verbose = FALSE )"},{"path":"/reference/run_standard_deconvolution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run standard deconvolution — run_standard_deconvolution","text":"bulk_data_x numeric vector, matrix, data frame representing bulk data deconvolution. references_w numeric vector, matrix, data frame representing references deconvolution. markers numeric vector NULL. Represents markers used deconvolution. default, set NULL. max_iterations positive integer. Represents maximum number iterations deconvolution process. default, set 10000. verbose boolean. TRUE, function print additional details execution. default, set FALSE.","code":""},{"path":"/reference/run_standard_deconvolution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run standard deconvolution — run_standard_deconvolution","text":"list containing results deconvolution. might include estimated sources final weights depending implementation MMNF library python.","code":""},{"path":"/reference/save_plot_as_pdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Plot as PDF — save_plot_as_pdf","title":"Save Plot as PDF — save_plot_as_pdf","text":"function saves given plot object PDF file specific path.","code":""},{"path":"/reference/save_plot_as_pdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Plot as PDF — save_plot_as_pdf","text":"","code":"save_plot_as_pdf(   plot_object,   file_name,   width.parameter = NULL,   height.parameter = NULL,   path = NULL )"},{"path":"/reference/save_plot_as_pdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Plot as PDF — save_plot_as_pdf","text":"plot_object plot object saved. file_name String, name file save plot . include path file extension. width.parameter Numeric, width output PDF inches. Optional, default NULL. height.parameter Numeric, height output PDF inches. Optional, default NULL. path String, directory PDF saved. Optional, default '/mnt_volumen/GIT_REPOSITORIES/MTF/results/'.","code":""},{"path":"/reference/save_plot_as_pdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Plot as PDF — save_plot_as_pdf","text":"function used side effects creating PDF file return anything.","code":""},{"path":"/reference/save_plot_as_pdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save Plot as PDF — save_plot_as_pdf","text":"function first checks whether path provided. , uses default path. , opens new PDF device, prints 'plot_object' device, closes device, saves plot specified file. 'width.parameter' 'height.parameter' arguments allow control dimensions output PDF. provided, PDF created default dimensions.","code":""}]
